---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: media
spec:
  chart:
    spec:
      chart: immich
      version: 0.8.5
      sourceRef:
        kind: HelmRepository
        name: immich-charts
        namespace: flux-system
  interval: 30m
  values:
    env:
      REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
      DB_HOSTNAME: "{{ .Release.Name }}-postgresql"
      DB_USERNAME: "{{ .Values.postgresql.global.postgresql.auth.username }}"
      DB_DATABASE_NAME: "{{ .Values.postgresql.global.postgresql.auth.database }}"
      # -- You should provide your own secret outside of this helm-chart and use `postgresql.global.postgresql.auth.existingSecret` to provide credentials to the postgresql instance
      DB_PASSWORD: 
        valueFrom:
          secretKeyRef:
            name: immich-postgresql
            key: password
      IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'

    immich:
      persistence:
        # Main data store for all photos shared between different components.
        library:
          # Automatically creating the library volume is not supported by this chart
          # You have to specify an existing PVC to use
          existingClaim: immich-storage

    # Dependencies
    postgresql:
      enabled: true
      image:
        repository: tensorchord/pgvecto-rs
        tag: pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
      global:
        postgresql:
          auth:
            existingSecret: immich-postgresql
            database: immich
            username: immich
      resources:
        requests:
          cpu: 200m
          memory: 256Mi
        limits:
          cpu: 250m
          memory: 321Mi
      primary:
        initdb:
          scripts:
            create-extensions.sql: |
              CREATE EXTENSION cube;
              CREATE EXTENSION earthdistance;
              CREATE EXTENSION vectors;
        persistence:
          enabled: true
          existingClaim: immich-db
        service:
          type: LoadBalancer

    redis:
      enabled: true
      architecture: standalone
      auth:
        enabled: false
      master:
        persistence:
          existingClaim: immich-redis

    # Immich components

    server:
      enabled: true
      image:
        repository: ghcr.io/immich-app/immich-server
        pullPolicy: IfNotPresent
        tag: v1.125.6@sha256:07e45e10be9539f04dd3a819286b5b308b08142eeff7bc58a89bf21d97237d55

      
      ingress:
        main:
          enabled: true
          ingressClassName: "nginx"
          annotations:
            # proxy-body-size is set to 0 to remove the body limit on file uploads
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            cert-manager.io/cluster-issuer: "letsencrypt-prod"
          hosts:
            - host: photos.internal.wat.sn
              paths:
                - path: "/"
            - host: photos.wat.sn
              paths:
                - path: "/"
          tls:
            - hosts:
                - photos.internal.wat.sn
                - photos.corywatson.net
              secretName: immich-ingress-cert

    machine-learning:
      enabled: true
      image:
        repository: ghcr.io/immich-app/immich-machine-learning
        pullPolicy: IfNotPresent
        tag: v1.125.6-openvino@sha256:8909004714c08e9573c5e5a8c761fdb1afe240b1a343a63829ba534a25f21dee 
      resources:
        requests:
          gpu.intel.com/i915: "1"
        limits:
          gpu.intel.com/i915: "1"
      env:
        TRANSFORMERS_CACHE: /cache
      persistence:
        cache:
          enabled: true
          size: 10Gi
          type: pvc
          accessMode: ReadWriteOnce
          storageClass: freenas-iscsi-csi